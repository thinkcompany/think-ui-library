@use 'sass:math';
/* ----------------------------------------------*\
     Compositional mixins
\*---------------------------------------------- */

/*
  Font fallbacks
  tldr; use system fonts as fallbacks and normalize their glyph ascent and descent to match the web font
  the calculations relatively straightforward, but the values for all google font are available in the
  font-metric-overrides.csv file in the repo

  https://github.com/khempenius/font-fallbacks-dataset/blob/main/font-metric-overrides.csv
  https://developer.chrome.com/blog/font-fallbacks/

  Font Metric Overrides
  Newsreader
  ascent-override: 0.735;
  descent-override: 0.265;
  line-gap-override: 0.0;

  Inter
  ascent-override: 0.96875;
  descent-override: 0.2415;
  line-gap-override: 0.0;
*/

@font-face {
  font-family: 'newsreader-fallback';
  font-display: swap;
  src: local('Times New Roman');
  /* ascent-override (with size-adjust) = ascent-override - (ascent-override / (UPM * size-adjust)) */
  size-adjust: 105%;
  ascent-override: calc(73.45% - 3.5%);
  descent-override: calc(26.5% - 1.26%);
  line-gap-override: 0;
}

@font-face {
  font-family: 'inter-fallback';
  font-display: swap;
  src: local('Arial');
	size-adjust: 107.5%;
	ascent-override: calc(96.9% - 3.2%);
	descent-override: calc(24.2% - 0.8%);
	line-gap-override: 0;
}

@font-face {
  font-family: 'newsreader-fallback-android';
  font-display: swap;
  src: local('Roboto');
  ascent-override: 73.5%;
  descent-override: 26.5%;
  line-gap-override: 0;
}

@font-face {
  font-family: 'inter-fallback-android';
  font-display: swap;
  src: local('Roboto');
  ascent-override: 96.9%;
  descent-override: 24.2%;
  line-gap-override: 0;
}

// The base style for all fonts.
// Accepts an optional font color parameter and font weight (defaults to normal)
@mixin type-base-style($font-color: inherit, $font-weight: normal) {
  color: $font-color;
  font-weight: $font-weight;
  font-size: $font-size-16;
  font-family: $font-stack-inter;
  font-optical-sizing: auto;
  font-variant-numeric: lining-nums proportional-nums;
}

@mixin type-base-display($font-color: inherit, $font-weight: normal) {
  color: $font-color;
  font-family: $font-stack-newsreader;
  font-weight: $font-weight;
  font-optical-sizing: auto;
  font-variant-numeric: lining-nums proportional-nums;

}

/* ----------------------------------------------*\
     Styling mixins
\*---------------------------------------------- */
@mixin type-style-bold {
  font-weight: $font-weight-600;
}

/* ----------------------------------------------*\
     Size mixin
\*---------------------------------------------- */

// scale relative to viewport width. same units required
@mixin clamp($properties, $min-vw, $max-vw, $min-value, $max-value) {
  & {
    @each $property in $properties {
      #{$property}: $min-value;
    }

    @media screen and (min-width: $min-vw) {
      @each $property in $properties {
        #{$property}: calc(
          #{$min-value} +
            #{strip-unit($max-value - $min-value)} *
            (100vw - #{$min-vw}) /
            #{strip-unit($max-vw - $min-vw)}
        );
      }
    }

    @media screen and (min-width: $max-vw) {
      @each $property in $properties {
        #{$property}: $max-value;
      }
    }
  }
}

@function strip-unit($value) {
  @return math.div($value, $value * 0 + 1);
}

/* ----------------------------------------------*\
    Type mixins
\*---------------------------------------------- */
@mixin type-display-extra-large($font-color: inherit, $italic: false) {
  @include type-base-display($font-color, 300);
  font-variation-settings: 'wght' 300, 'slnt' 0;
  line-height: 1.1;

  @include clamp(
    font-size,
    $breakpoint-phone-portrait,
    $breakpoint-desktop,
    $font-size-53,
    $font-size-118
  );
}

@mixin type-display-large(
  $font-color: inherit,
  $italic: false,
  $bold: false,
  $lrg80: false,
  $lrg64: false
) {
  @include type-base-display($font-color, 300);
  font-variation-settings: 'wght' 300, 'slnt' 0;
  line-height: 1.07;

  @if $lrg64 {
    line-height: 1.2;

    @include clamp(
      font-size,
      $breakpoint-phone-portrait,
      $breakpoint-desktop,
      $font-size-42,
      $font-size-64
    );
  } @else if $lrg80 {
    line-height: 1.16;
    @include clamp(
      font-size,
      $breakpoint-phone-portrait,
      $breakpoint-desktop,
      $font-size-48,
      $font-size-80
    );
  } @else {
    @include clamp(
      font-size,
      $breakpoint-phone-portrait,
      $breakpoint-desktop,
      $font-size-48,
      $font-size-90
    );
  }
}

@mixin type-display-medium(
  $font-color: inherit,
  $italic: false,
  $med48: false,
  $med42: false,
  $med36: false
) {
  @include type-base-display($font-color, 400);
  font-variation-settings: 'wght' 400, 'slnt' 0;
  line-height: 1.16;

  @if $med48 {
    line-height: 1.1;
    @include clamp(
      font-size,
      $breakpoint-phone-portrait,
      $breakpoint-desktop,
      $font-size-36,
      $font-size-48
    );
  } @else if $med42 {
    line-height: 1.3;
    @include clamp(
      font-size,
      $breakpoint-phone-portrait,
      $breakpoint-desktop,
      $font-size-32,
      $font-size-42
    );
  } @else if $med36 {
    line-height: 1.25;
    @include clamp(
      font-size,
      $breakpoint-phone-portrait,
      $breakpoint-desktop,
      $font-size-24,
      $font-size-36
    );
  } @else {
    @include clamp(
      font-size,
      $breakpoint-phone-portrait,
      $breakpoint-desktop,
      $font-size-36,
      $font-size-52
    );
  }
}

@mixin type-display-small($font-color: inherit, $italic: false, $small24: false, $weight: 400) {
  @include type-base-display($font-color, $weight);
  font-variation-settings: 'wght' $weight, 'slnt' 0;
  line-height: 1.28;

  @if $small24 {
    line-height: 1.25;
    @include clamp(
      font-size,
      $breakpoint-phone-portrait,
      $breakpoint-desktop,
      $font-size-20,
      $font-size-24
    );
  } @else {
    @include clamp(
      font-size,
      $breakpoint-phone-portrait,
      $breakpoint-desktop,
      $font-size-24,
      $font-size-28
    );
  }
}

@mixin type-eyebrow($font-color: $color-classic-blue, $italic: false, $small: false, $weight: 500) {
  @include type-base-style($font-color, $weight);
  line-height: 1;
  color: $font-color;
  font-variation-settings: 'wght' $weight, 'slnt' 0;

  @if $small {
    font-size: $font-size-16;
  } @else {
    @include clamp(
      font-size,
      $breakpoint-phone-portrait,
      $breakpoint-desktop,
      $font-size-16,
      $font-size-18
    );
  }

  .tco-lights-out & {
    color: $color-dark-theme-blue;
  }
}

@mixin type-body-large(
  $font-color: inherit,
  $height: default,
  $italic: false,
  $bold: false,
  $weight: 400,
  $xl: false,
  $jumbo: false,
  $mega: false,
  $small: false,
  $lrg20: false,
  $lrg36: false
) {
  @include type-base-style($font-color, $weight);
  font-variation-settings: 'wght' $weight, 'slnt' 0;
  line-height: 1.5;

  @if $italic {
    font-style: italic;
    font-variation-settings: 'wght' $weight, 'slnt' 10;
    /*
    Slant (slnt)
    "Adjust the style from upright to slanted, also known to typographers as an 'oblique' style. Rarely, slant can work in the other direction, called a 'backslanted' or 'reverse oblique' style."
    This is basically font-style: italic;
    */
  }

  @if $bold {
    font-variation-settings: 'wght' $font-weight-500, 'slnt' 0;
    font-weight: $font-weight-500;
  }

  @if $mega {
    @include clamp(
      font-size,
      $breakpoint-phone-portrait,
      $breakpoint-desktop,
      $font-size-28,
      $font-size-50
    );
  } @else if $jumbo {
    @include clamp(
      font-size,
      $breakpoint-phone-portrait,
      $breakpoint-desktop,
      $font-size-28,
      $font-size-40
    );
  } @else if $xl {
    @include clamp(
      font-size,
      $breakpoint-phone-portrait,
      $breakpoint-desktop,
      $font-size-24,
      $font-size-28
    );
  } @else if $lrg36 {
    @include clamp(
      font-size,
      $breakpoint-phone-portrait,
      $breakpoint-desktop,
      $font-size-28,
      $font-size-36
    );
  } @else if $lrg20 {
    @include clamp(
      font-size,
      $breakpoint-phone-portrait,
      $breakpoint-desktop,
      $font-size-16,
      $font-size-20
    );
  } @else if $small {
    @include clamp(
      font-size,
      $breakpoint-phone-portrait,
      $breakpoint-desktop,
      $font-size-18,
      $font-size-22
    );
  } @else {
    @include clamp(
      font-size,
      $breakpoint-phone-portrait,
      $breakpoint-desktop,
      $font-size-20,
      $font-size-24
    );
  }
}

@mixin type-body-default($font-color: inherit, $italic: false, $weight: 400, $size: $font-size-16) {
  @include type-base-style($font-color, $weight);
  font-size: $size;
  font-variation-settings: 'wght' $weight, 'slnt' 0;
  line-height: 1.5;

  @if $italic {
    font-style: italic;
    font-variation-settings: 'wght' $weight, 'slnt' 10;
    /*
    Slant (slnt)
    "Adjust the style from upright to slanted, also known to typographers as an 'oblique' style. Rarely, slant can work in the other direction, called a 'backslanted' or 'reverse oblique' style."
    This is basically font-style: italic;
    */
  }
}

@mixin type-body-small(
  $font-color: inherit,
  $italic: false,
  $size: $font-size-15,
  $weight: $font-weight-500
) {
  @include type-base-style($font-color, $weight);
  font-size: $size;
  font-variation-settings: 'wght' $weight, 'slnt' 0;
  line-height: 1.5;

  @if $italic {
    font-style: italic;
    font-variation-settings: 'wght' $weight, 'slnt' 10;
  }
}

@mixin type-cursive($font-color: inherit) {
  @include type-base-style($font-color, 400);
  font-family: $font-stack-cursive;
}

@mixin list-plain {
  margin: 0;
  padding: 0;
  list-style: none;
}

@mixin type-highlight($font-color: $color-tint-blue-primary) {
  color: $font-color;
  transition: text-decoration 0.4s ease, color 0.4s ease;
}

@mixin type-link(
  $font-color: $color-classic-blue,
  $font-size: inherit,
  $font-weight: inherit,
  $font-family: inherit,
  $line-height: inherit,
  $underline: $font-color,
  $show-initial: false
) {
  color: $font-color;
  font-weight: $font-weight;
  font-size: $font-size;
  font-family: $font-family;
  line-height: $line-height;
  text-decoration: none;
  background-color: transparent;
  text-transform: none;
  border-bottom-width: 1px;
  border-bottom-style: solid;
  border-bottom-color: transparent;
  transition: border-color 0.2s linear, color 0.2s linear;

  &:not(.tco-btn):not(.tco-link--dark-theme):not(.tco-text-link-motion):not(
      .tco-card--text-headline-filled
    ) {
    .tco-lights-out & {
      color: $color-dark-theme-blue;
      border-bottom-color: $color-dark-theme-blue;
    }
  }

  @if $show-initial {
    border-bottom-color: $underline;
  }

  &:disabled,
  &[disabled] {
    cursor: inherit;
  }

  &:hover,
  &:focus {
    border-bottom-color: $underline;

    @if $show-initial {
      border-bottom-color: transparent;
    }

    &:not(.tco-btn):not(.tco-link--dark-theme):not(.tco-card--text) {
      .tco-lights-out & {
        border-bottom-color: transparent;
      }
    }
  }
}

$arrow-width: 19px;
$arrow-height: 17px;
$arrow-offset: 5px;
$arrow-translate: 10px;

@mixin type-link-cta(
  $font-color: inherit,
  $padding-right: $arrow-offset + $arrow-offset,
  $fill: $color-tint-blue-primary,
  $weight: 500
) {
  @include type-link($show-initial: false);
  padding-right: $padding-right;
  color: $font-color;
  text-decoration: none;
  font-weight: $weight;
  font-variation-settings: 'wght' $weight;

  .tco-text-link-icon,
  svg {
    display: inline-block;
    width: $arrow-width;
    height: $arrow-height;
    fill: $fill;
    transition: transform 0.2s linear;
    transform: translate($arrow-offset, 3px);
    transform-origin: left center;

    &:not(.tco-text-link-icon--alt) {
      .tco-lights-out & {
        fill: $color-dark-theme-blue;
      }
    }
  }

  &:hover,
  &:focus {
    .tco-text-link--icon,
    svg {
      transform: translate($arrow-translate, 3px);
    }
  }

  &[disabled],
  &:disabled {
    .tco-text-link-icon,
    svg {
      fill: $color-disabled;
      transform: translate($arrow-offset, 0px);
    }
  }

  &.tco-text-link--secondary {
    color: $color-foreground-on-tint;

    .tco-text-link-icon {
      fill: $color-foreground-on-tint;
    }
  }
}

/**
  * Makes type wrapped in an anchor
  * NOT have the standard link style
  */
@mixin type-not-link {
  color: inherit;
  font-weight: inherit;
  text-decoration: none;
  background: none;
  border-bottom-width: 0;
}
