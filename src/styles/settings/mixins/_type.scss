/* ----------------------------------------------*\
     Compositional mixins
\*---------------------------------------------- */

// The base style for all fonts.
// Accepts an optional font color parameter and font weight (defaults to normal)
@mixin type-base-style($font-color: inherit, $font-weight: normal) {
  color: $font-color;
  font-weight: $font-weight;
  font-size: $font-size-16;
  font-family: $font-stack-slab-book;
}

/* ----------------------------------------------*\
     Styling mixins
\*---------------------------------------------- */
@mixin type-style-bold {
  font-weight: $font-weight-600;
}

/* ----------------------------------------------*\
     Size mixin
\*---------------------------------------------- */

// scale relative to viewport width. same units required
@mixin clamp($properties, $min-vw, $max-vw, $min-value, $max-value) {
  & {
    @each $property in $properties {
      #{$property}: $min-value;
    }

    @media screen and (min-width: $min-vw) {
      @each $property in $properties {
        #{$property}: calc(
          #{$min-value} +
            #{strip-unit($max-value - $min-value)} *
            (100vw - #{$min-vw}) /
            #{strip-unit($max-vw - $min-vw)}
        );
      }
    }

    @media screen and (min-width: $max-vw) {
      @each $property in $properties {
        #{$property}: $max-value;
      }
    }
  }
}

@function strip-unit($value) {
  @return $value / ($value * 0 + 1);
}

/* ----------------------------------------------*\
    Type mixins
\*---------------------------------------------- */
@mixin type-display-extra-large($font-color: inherit, $italic: false) {
  @include type-base-style($font-color, 400);
  @include clamp(
    font-size,
    $breakpoint-phone-portrait,
    $breakpoint-desktop,
    $font-size-53,
    $font-size-160
  );
  @include clamp(
    line-height,
    $breakpoint-phone-portrait,
    $breakpoint-desktop,
    60px,
    175px
  );
  font-family: $font-stack-slab-light;

  @if $italic {
    font-family: $font-stack-slab-light-italic;
  }
}

@mixin type-display-large($font-color: inherit, $italic: false) {
  @include type-base-style($font-color, 400);
  @include clamp(
    font-size,
    $breakpoint-phone-portrait,
    $breakpoint-desktop,
    $font-size-53,
    $font-size-120
  );
  @include clamp(
    line-height,
    $breakpoint-phone-portrait,
    $breakpoint-desktop,
    60px,
    128px
  );
  font-family: $font-stack-slab-light;

  @if $italic {
    font-family: $font-stack-slab-light-italic;
  }
}

@mixin type-display-medium($font-color: inherit, $italic: false) {
  @include type-base-style($font-color, 400);
  @include clamp(
    font-size,
    $breakpoint-phone-portrait,
    $breakpoint-desktop,
    $font-size-43,
    $font-size-80
  );
  @include clamp(
    line-height,
    $breakpoint-phone-portrait,
    $breakpoint-desktop,
    52px,
    92px
  );
  font-family: $font-stack-slab-light;
  letter-spacing: 0;

  @if $italic {
    font-family: $font-stack-slab-light-italic;
  }
}

@mixin type-display-junior($font-color: inherit) {
  @include type-base-style($font-color, 400);
  @include clamp(
    font-size,
    $breakpoint-phone-portrait,
    $breakpoint-desktop,
    $font-size-36,
    $font-size-48
  );
  line-height: 1.2;
  font-family: $font-stack-slab;
  letter-spacing: 0;
}

@mixin type-display-small($font-color: inherit, $italic: false) {
  @include type-base-style($font-color, 400);
  @include clamp(
    font-size,
    $breakpoint-phone-portrait,
    $breakpoint-desktop,
    $font-size-30,
    $font-size-36
  );
  @include clamp(
    line-height,
    $breakpoint-phone-portrait,
    $breakpoint-desktop,
    40px,
    46px
  );
  font-family: $font-stack-slab-book;

  @if $italic {
    font-family: $font-stack-slab-book-italic;
  }
}

@mixin type-display-thin($font-color: inherit) {
  @include type-base-style($font-color, 400);
  font-size: $font-size-24;
  line-height: 1;
  font-family: $font-stack-slab-light;
  letter-spacing: 0;
}

@mixin type-display-extra-small($font-color: inherit, $italic: false) {
  @include type-base-style($font-color, 700);
  font-size: $font-size-11;
  font-family: $font-stack-sans-serif-bold;
  text-transform: uppercase;
  letter-spacing: 1px;
  line-height: 1.36;

  @if $italic {
    font-family: $font-stack-sans-serif-bold-italic;
  }
}

@mixin type-display-extra-small-slab($font-color: inherit) {
  @include type-base-style($font-color, 300);
  font-size: $font-size-11;
  font-family: $font-stack-slab;
  line-height: 1.45;
}

@mixin type-eyebrow(
  $font-color: inherit,
  $italic: false,
  $font-size: $font-size-14
) {
  @include type-base-style($font-color, 900);
  font-size: $font-size;
  font-family: $font-stack-sans-serif-black;
  line-height: 1.3;
  letter-spacing: 3px;
  text-transform: uppercase;

  @if $italic {
    font-family: $font-stack-sans-serif-black-italic;
  }
}

@mixin type-body-large(
  $font-color: inherit,
  $height: default,
  $italic: false,
  $bold: false
) {
  @include type-base-style($font-color, 400);
  @include clamp(
    font-size,
    $breakpoint-phone-portrait,
    $breakpoint-desktop,
    $font-size-24,
    $font-size-28
  );
  @include clamp(
    line-height,
    $breakpoint-phone-portrait,
    $breakpoint-desktop,
    32px,
    46px
  );
  font-family: $font-stack-slab;

  @if $height != default {
    @include clamp(
      line-height,
      $breakpoint-phone-portrait,
      $breakpoint-desktop,
      38px,
      46px
    );
  }

  @if $italic {
    font-family: $font-stack-slab-italic;
  }

  @if $bold {
    font-family: $font-stack-slab-bold;
  }

  strong {
    font-family: $font-stack-slab-bold;
  }
}

@mixin type-body-default($font-color: inherit, $italic: false) {
  @include type-base-style($font-color);
  font-size: $font-size-18;
  font-family: $font-stack-slab-book;
  line-height: 1.78;

  @if $italic {
    font-family: $font-stack-slab-book-italic;
  }
}

@mixin type-body-medium($font-color: inherit, $font-weight: 500) {
  @include type-base-style($font-color, 500);
  font-size: $font-size-24;
  font-family: $font-stack-sans-serif;
  line-height: 1.25;
}

@mixin type-body-small($font-color: inherit, $italic: false) {
  @include type-base-style($font-color, 500);
  font-size: $font-size-16;
  font-family: $font-stack-sans-serif;
  line-height: 1.25;

  @if $italic {
    font-family: $font-stack-sans-serif-italic;
  }
}

@mixin type-body-small-light($font-color: inherit) {
  @include type-base-style($font-color, 300);
  font-size: $font-size-16;
  font-family: $font-stack-sans-serif-light;
  line-height: 1.25;
}

@mixin type-body-xsmall(
  $font-color: inherit,
  $italic: false,
  $font-size: $font-size-12
) {
  @include type-base-style($font-color, 500);
  font-size: $font-size;
  font-family: $font-stack-sans-serif;
  line-height: 1.2;

  @if $italic {
    font-family: $font-stack-sans-serif-italic;
  }
}

@mixin type-sans-bold($font-color: inherit, $italic: false) {
  @include type-base-style($font-color);
  font-size: $font-size-16;
  font-family: $font-stack-sans-serif-bold;
  line-height: 1.5;

  @if $italic {
    font-family: $font-stack-sans-serif-bold-italic;
  }
}

@mixin type-cursive($font-color: inherit) {
  @include type-base-style($font-color, 400);
  font-family: $font-stack-cursive;
}

@mixin list-plain {
  margin: 0;
  padding: 0;
  list-style: none;
}

@mixin type-highlight($font-color: $color-tint-blue-primary) {
  color: $font-color;
  transition: text-decoration 0.4s ease, color 0.4s ease;
}

@mixin type-link(
  $font-color: $color-classic-blue,
  $font-size: inherit,
  $font-weight: inherit,
  $font-family: inherit,
  $line-height: inherit,
  $underline: $font-color,
  $show-initial: false
) {
  color: $font-color;
  font-weight: $font-weight;
  font-size: $font-size;
  font-family: $font-family;
  line-height: $line-height;
  text-decoration: none;
  background-color: transparent;
  text-transform: none;
  border-bottom-width: 1px;
  border-bottom-style: solid;
  border-bottom-color: transparent;
  transition: border-color 0.2s linear, color 0.2s linear;

  &:not(.tco-btn):not(.tco-link--dark-theme) {
    .tco-lights-out & {
      color: $color-dark-theme-blue;
      border-bottom-color: $color-dark-theme-blue;
    }
  }

  @if $show-initial {
    border-bottom-color: $underline;
  }

  &:disabled,
  &[disabled] {
    cursor: inherit;
  }

  &:hover,
  &:focus {
    border-bottom-color: $underline;

    @if $show-initial {
      border-bottom-color: transparent;
    }

    &:not(.tco-btn):not(.tco-link--dark-theme) {
      .tco-lights-out & {
        border-bottom-color: transparent;
      }
    }
  }
}

$arrow-width: (16 / 18) * 1em;
$arrow-height: (14 / 18) * 1em;
$arrow-offset: 5px;
$arrow-translate: 10px;

@mixin type-link-cta(
  $font-color: inherit,
  $padding-right: $arrow-offset + $arrow-offset,
  $fill: $color-tint-blue-primary
) {
  @include type-link($show-initial: false);
  padding-right: $padding-right;
  color: $font-color;
  text-decoration: none;

  .tco-text-link-icon,
  svg {
    display: inline-block;
    width: $arrow-width;
    height: $arrow-height;
    fill: $fill;
    transition: transform 0.2s linear;
    transform: translate($arrow-offset, 0px);
    transform-origin: left center;

    &:not(.tco-text-link-icon--alt) {
      .tco-lights-out & {
        fill: $color-dark-theme-blue;
      }
    }
  }

  &:hover,
  &:focus {
    .tco-text-link--icon,
    svg {
      transform: translate($arrow-translate, 0px);
    }
  }

  &[disabled],
  &:disabled {
    .tco-text-link-icon,
    svg {
      fill: $color-disabled;
      transform: translate($arrow-offset, 0px);
    }
  }

  &.tco-text-link--secondary {
    color: $color-foreground-on-tint;

    .tco-text-link-icon {
      fill: $color-foreground-on-tint;
    }
  }
}

/**
  * Makes type wrapped in an anchor
  * NOT have the standard link style
  */
@mixin type-not-link {
  color: inherit;
  font-weight: inherit;
  text-decoration: none;
  background: none;
  border-bottom-width: 0;
}
